{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","recipeId","title","summary","analyzedInstructions","image","useState","checkedValue","setCheckedValue","indicateFavorite","setIndicateFavorite","instructions_title","length","instructions","elm","steps","step","dangerouslySetInnerHTML","__html","src","alt","type","onChange","e","onClick","method","fetch","headers","Accept","body","JSON","stringify","id","checked","App","allRecipes","setAllRecipes","query","setQuery","checkedFavoritesValue","setCheckedFavoritesValue","cuisine","setCuisine","diet","setDiet","setType","useEffect","getListOfRecipes","a","mode","response","json","data","getFavoritesRecipes","className","onSubmit","preventDefault","placeholder","value","target","map","r","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA4DeA,EA1DA,SAAC,GAA+D,IAAD,EAA5DC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,qBAAsBC,EAAY,EAAZA,MAChE,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgDF,mBAAS,mBAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAYIC,EAAqD,IAAhCP,EAAqBQ,OAAe,gBAAkB,6BAE3EC,EAAe,OAhByD,cAiB5DT,GAjB4D,IAiB5E,2BAAsC,CAAC,IAAD,EAA7BU,EAA6B,sBACtBA,EAAIC,OADkB,IACpC,2BAAyB,CACvBF,GAAgB,OADO,QACIG,KAAO,SAFA,gCAjBsC,8BAsB5EH,GAAgB,QAgBhB,OACE,gCACE,6BAAKX,IACL,mBAAGe,wBAAyB,CAAEC,OAAQf,KACtC,6BAAKQ,IACL,mBAAGM,wBAAyB,CAAEC,OAAQL,KACtC,qBAAKM,IAAKd,EAAOe,IAAI,KACrB,kCACE,uBACEC,KAAK,WACLC,SA5Ce,SAACC,GACtBf,GAAiBD,GAKfG,EAHGH,EAGiB,kBAFA,yBAyChBiB,QAzBgB,SAACD,GACvB,IACME,EAAUlB,EAAwB,MAAT,OAE/BmB,MAAM,YAAD,OAHSnB,EAAkC,sBAAnB,kBAGH,CACxBkB,OAAQA,EACRE,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU,CAAEC,GAAI/B,OAgBvBgC,QAAS1B,IAEVE,SCkGMyB,EApJH,WACV,MAAoC5B,mBAAS,IAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KACA,EAA0B9B,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcC,EAAd,KACA,EAA0DhC,oBAAS,GAAnE,mBAAOiC,EAAP,KAA8BC,EAA9B,KAEA,EAA8BlC,mBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAwBpC,mBAAS,IAAjC,mBAAOqC,EAAP,KAAaC,EAAb,KACA,EAAwBtC,mBAAS,IAAjC,mBAAOe,EAAP,KAAawB,EAAb,KAEAC,qBAAU,WACRC,EAAiBV,EAAOI,EAASE,EAAMtB,KAGtC,IAEH,IAAM0B,EAAgB,uCAAG,WAAOV,EAAOI,EAASE,EAAMtB,GAA7B,iBAAA2B,EAAA,sEACAtB,MAAM,qBAAD,OACLW,EADK,oBACYI,EADZ,iBAC4BE,EAD5B,iBACyCtB,GACnE,CACE4B,KAAM,YAJa,cACjBC,EADiB,gBAOJA,EAASC,OAPL,OAOjBC,EAPiB,OAQvBhB,EAAcgB,GARS,2CAAH,4DAgChBC,EAAmB,uCAAG,8BAAAL,EAAA,sEACHtB,MAAM,wBAAyB,CAAEuB,KAAM,YADpC,cACpBC,EADoB,gBAEPA,EAASC,OAFF,OAEpBC,EAFoB,OAG1BhB,EAAcgB,GAHY,2CAAH,qDAkBzB,OACE,sBAAKE,UAAU,MAAf,UACE,uBAAMC,SArCU,SAAChC,GACnBA,EAAEiC,iBACFlB,EAASD,GACTU,EAAiBV,EAAOM,EAAMF,EAASpB,GACvCiB,EAAS,KAiCsBgB,UAAU,cAAvC,UACE,uBACEG,YAAY,sBACZH,UAAU,aACVjC,KAAK,OACLqC,MAAOrB,EACPf,SA/Ca,SAACC,GACpBe,EAASf,EAAEoC,OAAOD,UAgDd,wBAAQJ,UAAU,gBAAgBjC,KAAK,SAAvC,oBAGA,kCACE,uBACEA,KAAK,WACLC,SA5Cc,WACtBkB,GAA0BD,GAErBA,EAGHQ,EAAiB,GAAI,GAAI,GAAI,IAF7BM,KAyCMpB,QAASM,IAJb,oBAQA,qBAAKe,UAAU,kBAAf,SACE,yBAAQhC,SA9BO,SAACC,GACtBmB,EAAWnB,EAAEoC,OAAOD,QA6Bd,UACE,wBAAQA,MAAM,GAAd,4BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,uBAGJ,qBAAKJ,UAAU,eAAf,SACE,yBAAQhC,SAjDI,SAACC,GACnBqB,EAAQrB,EAAEoC,OAAOD,QAgDX,UACE,wBAAQA,MAAM,GAAd,yBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,0BAGJ,qBAAKJ,UAAU,eAAf,SACE,yBAAQhC,SAxDI,SAACC,GACnBsB,EAAQtB,EAAEoC,OAAOD,QAuDX,UACE,wBAAQA,MAAM,GAAd,yBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,2BAIN,qBAAKJ,UAAU,UAAf,SACGnB,EAAWyB,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEE5D,SAAU4D,EAAE7B,GACZ9B,MAAO2D,EAAE3D,MACTC,QAAS0D,EAAE1D,QACXC,qBAAsByD,EAAEzD,qBACxBC,MAAOwD,EAAExD,OALJwD,EAAE7B,aC/HJ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33cdfa43.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Recipe = ({ recipeId, title, summary, analyzedInstructions, image }) => {\r\n  const [checkedValue, setCheckedValue] = useState(false);\r\n  const [indicateFavorite, setIndicateFavorite] = useState(\"Add to Favorite\");\r\n\r\n  const handleCheckbox = (e) => {\r\n    setCheckedValue(!checkedValue);\r\n\r\n    if (!checkedValue) {\r\n      setIndicateFavorite(\"Remove From Favorite\");\r\n    } else {\r\n      setIndicateFavorite(\"Add to Favorite\");\r\n    }\r\n  };\r\n\r\n  let instructions_title = analyzedInstructions.length !== 0 ? \"Instructions:\" : \"No instrautions were given\";\r\n\r\n  let instructions = \"<ol>\";\r\n  for (var elm of analyzedInstructions) {\r\n    for (var s of elm.steps) {\r\n      instructions += \"<li>\" + s.step + \"</li>\";\r\n    }\r\n  }\r\n  instructions += \"</ol>\";\r\n\r\n  const handleFavorites = (e) => {\r\n    const path = !checkedValue ? \"addToFavorites\" : \"removeFromFavorites\";\r\n    const method = !checkedValue ? \"POST\" : \"PUT\";\r\n\r\n    fetch(`/recipes/${path}`, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id: recipeId }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <p dangerouslySetInnerHTML={{ __html: summary }}></p>\r\n      <h3>{instructions_title}</h3>\r\n      <p dangerouslySetInnerHTML={{ __html: instructions }}></p>\r\n      <img src={image} alt=\"\" />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleCheckbox}\r\n          onClick={handleFavorites}\r\n          checked={checkedValue}\r\n        />\r\n        {indicateFavorite}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./components/Recipe\";\n\nconst App = () => {\n  const [allRecipes, setAllRecipes] = useState([]); // save the recipes as a list\n  const [query, setQuery] = useState(\"\"); // will be update in real time when user is writing\n  const [checkedFavoritesValue, setCheckedFavoritesValue] = useState(false); // if true - showing the favorite list\n\n  const [cuisine, setCuisine] = useState(\"\");\n  const [diet, setDiet] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  useEffect(() => {\n    getListOfRecipes(query, cuisine, diet, type);\n    // to disable an warning\n    // eslint-disable-next-line\n  }, []);\n\n  const getListOfRecipes = async (query, cuisine, diet, type) => {\n    const response = await fetch(\n      `/recipes/search?q=${query}&cuisine=${cuisine}&diet=${diet}&type=${type}`,\n      {\n        mode: \"no-cors\",\n      }\n    );\n    const data = await response.json();\n    setAllRecipes(data);\n  };\n\n  const updateSearch = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const searchQuery = (e) => {\n    e.preventDefault();\n    setQuery(query);\n    getListOfRecipes(query, diet, cuisine, type);\n    setQuery(\"\");\n  };\n\n  const handleFavorites = () => {\n    setCheckedFavoritesValue(!checkedFavoritesValue);\n\n    if (!checkedFavoritesValue) {\n      getFavoritesRecipes();\n    } else {\n      getListOfRecipes(\"\", \"\", \"\", \"\");\n    }\n  };\n\n  const getFavoritesRecipes = async () => {\n    const response = await fetch(\"/recipes/allFavorites\", { mode: \"no-cors\" });\n    const data = await response.json();\n    setAllRecipes(data);\n  };\n\n  const handleDiets = (e) => {\n    setDiet(e.target.value);\n  };\n\n  const handleCuisines = (e) => {\n    setCuisine(e.target.value);\n  };\n\n  const handleTypes = (e) => {\n    setType(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={searchQuery} className=\"search-form\">\n        <input\n          placeholder=\"Search for a recipe\"\n          className=\"search-bar\"\n          type=\"text\"\n          value={query}\n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={handleFavorites}\n            checked={checkedFavoritesValue}\n          />\n          Show Favorites\n        </label>\n        <div className=\"cuisines-select\">\n          <select onChange={handleCuisines}>\n            <option value=\"\">Select Cuisine</option>\n            <option value=\"African\">African</option>\n            <option value=\"American\">American</option>\n            <option value=\"British\">British</option>\n            <option value=\"Chinese\">Chinese</option>\n            <option value=\"European\">European</option>\n            <option value=\"French\">French</option>\n            <option value=\"Indian\">Indian</option>\n            <option value=\"Italian\">Italian</option>\n            <option value=\"Jewish\">Jewish</option>\n            <option value=\"Thai\">Thai</option>\n          </select>\n        </div>\n        <div className=\"diets-select\">\n          <select onChange={handleDiets}>\n            <option value=\"\">Select Diet</option>\n            <option value=\"Gluten Free\">Gluten Free</option>\n            <option value=\"Ketogenic\">Ketogenic</option>\n            <option value=\"Vegetarian\">Vegetarian</option>\n            <option value=\"Lacto-Vegetarian\">Lacto-Vegetarian</option>\n            <option value=\"Ovo-Vegetarian\">Ovo-Vegetarian</option>\n            <option value=\"Vegan\">Vegan</option>\n            <option value=\"Pescetarian\">Pescetarian</option>\n            <option value=\"Paleo\">Paleo</option>\n            <option value=\"Primal\">Primal</option>\n            <option value=\"Whole30\">Whole30</option>\n          </select>\n        </div>\n        <div className=\"types-select\">\n          <select onChange={handleTypes}>\n            <option value=\"\">Select Type</option>\n            <option value=\"side dish\">side dish</option>\n            <option value=\"dessert\">dessert</option>\n            <option value=\"appetizer\">appetizer</option>\n            <option value=\"salad\">salad</option>\n            <option value=\"bread\">bread</option>\n            <option value=\"breakfast\">breakfast</option>\n            <option value=\"soup\">soup</option>\n            <option value=\"sauce\">sauce</option>\n            <option value=\"snack\">snack</option>\n            <option value=\"drink\">drink</option>\n          </select>\n        </div>\n      </form>\n      <div className=\"recipes\">\n        {allRecipes.map((r) => (\n          <Recipe\n            key={r.id}\n            recipeId={r.id}\n            title={r.title}\n            summary={r.summary}\n            analyzedInstructions={r.analyzedInstructions}\n            image={r.image}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}